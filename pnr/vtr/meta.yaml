{% set version = '%s_%04i_%s'|format(GIT_DESCRIBE_TAG|replace('vpr-', '')|replace('-', '') or '0.X', GIT_DESCRIBE_NUMBER|int, GIT_DESCRIBE_HASH or 'gUNKNOWN') %}

package:
  name: vtr
  version: {{ version }}

source:
  git_url: https://github.com/SymbiFlow/vtr-verilog-to-routing.git
  git_rev: master
  patches:
    - osx.patch             [osx]
    - windows.patch         [win]

build:
  # number: 201803050325
  number: {{ environ.get('DATE_NUM') }}
  # string: 20180305_0325
  string: {{ environ.get('DATE_STR') }}
  script_env:
    - CI
    - TRAVIS

requirements:
  build:
    - {{ compiler('c') }}   [linux]
    - {{ compiler('cxx') }} [linux]
    - python                {{ python }}
    - clang 8.0             [osx]
    - clangxx 8.0           [osx]
    - m2-bash               [win]
    - m2-m4                 [win]
    - m2-sed                [win]
    - m2-grep               [win]
    - m2-flex               [win]
    - m2-autoconf           [win]
    - m2-make               [win]
    - m2w64-gcc             [win]
    - m2-gperf              [win]
    - m2-bison              [win]
    - cmake
  host:
    - bison 3.4             [not win]
    - m2-bison              [win]
    - flex                  [not win]
    - m2-flex               [win]
    - cairo
    - cmake
    - fontconfig
    - ncurses               [not win]
    - pkg-config
    - m2-libreadline        [win]
    - readline              [not win]
    - tk
    - tbb
    - xorg-libice
    - xorg-libsm
    - xorg-libx11
    - xorg-libxcb
    - xorg-libxext
    - xorg-libxft           [not win]
  run:
    - readline              [not win]
    - tk
    - cairo
    - fontconfig
    - xorg-libx11
    - xorg-libxft           [not win]

#test:
#  commands:
#    - ./run_reg_test.pl vtr_reg_basic
#    - ./run_reg_test.pl vtr_reg_strong -j2

about:
  home: http://verilogtorouting.org/
  license: MIT
  license_file: LICENSE.md
  summary: 'The Verilog-to-Routing (VTR) project is a world-wide collaborative effort to provide a open-source framework for conducting FPGA architecture and CAD research and development. The VTR design flow takes as input a Verilog description of a digital circuit, and a description of the target FPGA architecture.'
